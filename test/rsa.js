const { assert, log } = require("console");
const path = require("path");
const Scalar = require("ffjavascript").Scalar;
const wasm_tester = require("circom_tester").wasm;

function bigintToArray(n, k, x) {
    let mod = BigInt(1);
    for (let idx = 0; idx < n; idx++) {
        mod *= BigInt(2);
    }

    const ret = [];
    let xTemp = x;
    for (let idx = 0; idx < k; idx++) {
        ret.push(xTemp % mod);
        xTemp /= mod; 
    }

    return ret;
}

async function testRsa(input1, input2, input3, real_result, circuit){
    let input = [bigintToArray(64, 64, input1), bigintToArray(64, 64, input2), input3];

    
    try {
        const w = await circuit.calculateWitness({ pubkey: input[0], signature: input[1], hashed: input[2], dummy: 0n }, true);

        if (!real_result) {
            throw new Error(`Expected failure for verification (${input1}, ${input2}), (${input3}, but it passed.`);
        }
    } catch (err) {
        if (real_result) {
            throw new Error(`Unexpected failure for verification (${input1}, ${input2}), (${input3}.`);
        } else {
            console.log(`Predicted failure for verification (${input1}, ${input2}), (${input3} correctly handled.`);
        }
    }
}

describe("Rsa test", function () {

    this.timeout(10000000);
    let circuit;

    before(async () => {
        circuit = await wasm_tester(path.join(__dirname, "circuits", "signatures", "rsa.circom"));
    });

    it("Ver correct signature", async function () {
        await testRsa(
n, 
n,
            ["0","0","0","1","0","0","0","0","1","0","0","0","1","0","0","1","0","1","0","1","0","1","0","0","1","0","1","1","0","1","0","1","1","1","1","1","0","0","1","0","1","1","1","0","1","1","0","0","0","0","0","0","0","0","0","1","1","1","0","1","0","0","1","0","0","1","1","0","0","0","1","1","0","0","0","0","0","1","0","0","0","1","0","0","1","0","1","0","0","0","0","1","0","1","0","1","0","1","0","1","1","1","1","1","0","0","1","1","0","0","1","0","1","0","0","0","0","1","1","0","0","0","1","1","1","0","1","0","1","0","1","1","1","1","0","0","0","1","0","0","1","0","0","0","0","0","0","0","0","1","0","0","0","1","1","0","1","0","0","1","0","1","1","1","1","0","1","0","1","1","1","0","0","1","0","0","1","0","1","0","0","1","1","0","1","0","1","1","1","0","0","1","1","0","0","1","1","1","1","0","1","0","0","1","1","0","1","0","0","0","1","0","1","1","0","1","1","0","0","0","0","1","0","0","1","1","1","0","1","0","0","1","0","1","0","1","1","0","1","0","0","1","0","0","0","0","1","0","0","0","1","1","1","1","0","1"],
            true,
            circuit
        );
    });

    it("Ver incorrect signature, should handle failture", async function () {
        await testRsa(
n, 
n,
            ["0","0","0","1","0","0","0","0","1","0","0","0","1","0","0","1","0","1","0","1","0","1","0","0","1","0","1","1","0","1","0","1","1","1","1","1","0","0","1","0","1","1","1","0","1","1","0","0","0","0","0","0","0","0","0","1","1","1","0","1","0","0","1","0","0","1","1","0","0","0","1","1","0","0","0","0","0","1","0","0","0","1","0","0","1","0","1","0","0","0","0","1","0","1","0","1","0","1","0","1","1","1","1","1","0","0","1","1","0","0","1","0","1","0","0","0","0","1","1","0","0","0","1","1","1","0","1","0","1","0","1","1","1","1","0","0","0","1","0","0","1","0","0","0","0","0","0","0","0","1","0","0","0","1","1","0","1","0","0","1","0","1","1","1","1","0","1","0","1","1","1","0","0","1","0","0","1","0","1","0","0","1","1","0","1","0","1","1","1","0","0","1","1","0","0","1","1","1","1","0","1","0","0","1","1","0","1","0","0","0","1","0","1","1","0","1","1","0","0","0","0","1","0","0","1","1","1","0","1","0","0","1","0","1","0","1","1","0","1","0","0","1","0","0","0","0","1","0","0","0","1","1","1","1","0","1"],
            false,
            circuit
        );
    });
});